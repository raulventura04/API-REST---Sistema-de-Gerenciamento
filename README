API REST - Sistema de Gerenciamento
Este projeto √© uma API RESTful desenvolvida em Java com Spring Boot para o gerenciamento de recursos. Ele implementa boas pr√°ticas RESTful, utiliza MySQL como banco de dados, inclui testes automatizados com JUnit e possui documenta√ß√£o interativa com Swagger.

Recursos
Java: Linguagem principal da aplica√ß√£o.
Spring Boot: Framework para desenvolvimento r√°pido e produtivo.
MySQL: Banco de dados relacional para persist√™ncia de dados.
JUnit: Testes automatizados para garantir a qualidade do c√≥digo.
Swagger: Interface para documenta√ß√£o e testes interativos da API.
Funcionalidades
Gerenciar recursos (CRUD):
Criar um novo recurso.
Listar todos os recursos.
Buscar recursos por ID.
Buscar recursos por tipo.
Excluir um recurso.
Pagina√ß√£o dos resultados.
Boas pr√°ticas RESTful (status HTTP apropriados, endpoints intuitivos).
Documenta√ß√£o completa e interativa via Swagger.
Instala√ß√£o
Pr√©-requisitos
Java 17 ou superior.
Maven instalado e configurado.
MySQL em execu√ß√£o.
Passos
Clone o reposit√≥rio:

bash
Copiar c√≥digo
git clone https://github.com/seu-usuario/seu-repositorio.git
cd seu-repositorio
Configure o banco de dados:

Crie um banco de dados no MySQL:
sql
Copiar c√≥digo
CREATE DATABASE sistema_gerenciamento;
Atualize o arquivo application.properties com as credenciais do banco:
properties
Copiar c√≥digo
spring.datasource.url=jdbc:mysql://localhost:3306/sistema_gerenciamento
spring.datasource.username=seu_usuario
spring.datasource.password=sua_senha
Compile e rode o projeto:

bash
Copiar c√≥digo
mvn clean install
mvn spring-boot:run
Acesse o Swagger UI para explorar a API:

URL: http://localhost:8080/swagger-ui/index.html
Endpoints da API
M√©todo	Endpoint	Descri√ß√£o
GET	/api/recursos	Lista todos os recursos.
GET	/api/recursos/{id}	Busca um recurso por ID.
GET	/api/recursos/tipo/{tipo}	Busca recursos por tipo.
GET	/api/recursos/paginado	Lista recursos com pagina√ß√£o.
POST	/api/recursos	Cria um novo recurso.
DELETE	/api/recursos/{id}	Exclui um recurso por ID.
Testes
Para executar os testes automatizados:
bash
Copiar c√≥digo
mvn test
Tecnologias Utilizadas
Java: Linguagem de programa√ß√£o principal.
Spring Boot: Framework para constru√ß√£o da API RESTful.
MySQL: Banco de dados relacional para persist√™ncia.
JUnit: Framework para testes automatizados.
Swagger: Ferramenta para documenta√ß√£o interativa.
Contribuindo
Sinta-se √† vontade para abrir issues ou enviar um pull request. Toda ajuda √© bem-vinda! üí°
